package online.militarygame.mongodatabase.initiaion;

import online.militarygame.mongodatabase.enums.unit.MovementType;
import online.militarygame.mongodatabase.models.MovementTypeCost;
import online.militarygame.mongodatabase.models.TileType;

import java.util.ArrayList;

public class TileInitiation {
	public static final Integer GRASS = 100;
	public static final Integer ROAD = 200;
	public static final Integer FOREST = 300;
	public static final Integer MOUNTAIN = 400;
	public static final Integer RIVER = 500;

	public static final Integer SHALLOW_WATER = 1000;
	public static final Integer DEEP_WATER = 1200;
	public static final Integer STRONG_CURRENT_WATER = 1300;
	public static final Integer ROCK_WATER = 4300;

	public static final Integer BARRIER = 2000;
	public static final Integer BROKEN_BARRIER = 2100;
	public static final Integer BREAKABLE_BARRIER = 2200;

	public static final Integer AIR = 3000;

	public static final Integer TOWN = 4000;
	public static final Integer BARRACKS = 4100;
	public static final Integer DOCK = 4200;
	public static final Integer AIRPORT = 4300;
	public static final Integer PRESIDENT_OFFICE = 4400;
	public static final Integer UNIVERSITY = 4500;
	public static final Integer TEMPLE = 4600;

	public static ArrayList<TileType> makeTileTypeMap1()
	{
		ArrayList<TileType> tileTypeMap = new ArrayList<>();

		TileType grass = new TileType();
		grass.setId(GRASS);
		grass.setName("General");
		grass.setDescription("Does literally nothing");
		grass.setGraphicsPath("/TileTypes/general.svg");
		grass.setDefenseRating(1);
		ArrayList<MovementTypeCost> grassMovementCosts = new ArrayList<>();
		grassMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		grassMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 2));
		grassMovementCosts.add(new MovementTypeCost(MovementType.TIRE, 2));
		grassMovementCosts.add(new MovementTypeCost(MovementType.TRACK, 1));
		grassMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		grassMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		grassMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		grassMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		grassMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		grassMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		grassMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		grass.setMovementTypeCosts(grassMovementCosts);
		putToMap(grass, tileTypeMap);

		TileType road = new TileType();
		road.setId(ROAD);
		road.setName("Road");
		road.setDescription("Road");
		road.setGraphicsPath("/TileTypes/road.svg");
		road.setDefenseRating(0);
		ArrayList<MovementTypeCost> roadMovementCosts = new ArrayList<>();
		roadMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		roadMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 1));
		roadMovementCosts.add(new MovementTypeCost(MovementType.TIRE, 1));
		roadMovementCosts.add(new MovementTypeCost(MovementType.TRACK, 1));
		roadMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		roadMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		roadMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		roadMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		roadMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		roadMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		roadMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		road.setMovementTypeCosts(roadMovementCosts);
		putToMap(road, tileTypeMap);
		
		TileType forest = new TileType();
		forest.setId(FOREST);
		forest.setName("Forest");
		forest.setDescription("Forest");
		forest.setGraphicsPath("/TileTypes/forest.svg");
		forest.setDefenseRating(2);
		ArrayList<MovementTypeCost> forestMovementCosts = new ArrayList<>();
		forestMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		forestMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 1));
		forestMovementCosts.add(new MovementTypeCost(MovementType.TIRE, 3));
		forestMovementCosts.add(new MovementTypeCost(MovementType.TRACK, 2));
		forestMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, 0));
		forestMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, 0));
		forestMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		forestMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, 0));
		forestMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		forestMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, 2));
		forestMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		forest.setMovementTypeCosts(forestMovementCosts);
		putToMap(forest, tileTypeMap);
		
		TileType mountain = new TileType();
		mountain.setId(MOUNTAIN);
		mountain.setName("Mountain");
		mountain.setDescription("Mountain");
		mountain.setGraphicsPath("/TileTypes/mountain.svg");
		mountain.setDefenseRating(4);
		ArrayList<MovementTypeCost> mountainMovementCosts = new ArrayList<>();
		mountainMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 2));
		mountainMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 1));
		mountainMovementCosts.add(new MovementTypeCost(MovementType.TIRE, null));
		mountainMovementCosts.add(new MovementTypeCost(MovementType.TRACK, null));
		mountainMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		mountainMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		mountainMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		mountainMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		mountainMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		mountainMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		mountainMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		mountain.setMovementTypeCosts(mountainMovementCosts);
		putToMap(mountain, tileTypeMap);
		
		TileType river = new TileType();
		river.setId(RIVER);
		river.setName("River");
		river.setDescription("River");
		river.setGraphicsPath("/TileTypes/river.svg");
		river.setDefenseRating(0);
		ArrayList<MovementTypeCost> riverMovementCosts = new ArrayList<>();
		riverMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		riverMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 2));
		riverMovementCosts.add(new MovementTypeCost(MovementType.TIRE, null));
		riverMovementCosts.add(new MovementTypeCost(MovementType.TRACK, null));
		riverMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		riverMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		riverMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		riverMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		riverMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		riverMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		riverMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		river.setMovementTypeCosts(riverMovementCosts);
		putToMap(river, tileTypeMap);
		
		TileType shallow_water = new TileType();
		shallow_water.setId(SHALLOW_WATER);
		shallow_water.setName("Shallow_water");
		shallow_water.setDescription("Shallow_water");
		shallow_water.setGraphicsPath("/TileTypes/shallow_water.svg");
		shallow_water.setDefenseRating(0);
		ArrayList<MovementTypeCost> shallow_waterMovementCosts = new ArrayList<>();
		shallow_waterMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		shallow_waterMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 1));
		shallow_waterMovementCosts.add(new MovementTypeCost(MovementType.TIRE, 1));
		shallow_waterMovementCosts.add(new MovementTypeCost(MovementType.TRACK, 1));
		shallow_waterMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		shallow_waterMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, 1));
		shallow_waterMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		shallow_waterMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		shallow_waterMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, null));
		shallow_waterMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, 1));
		shallow_waterMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		shallow_water.setMovementTypeCosts(shallow_waterMovementCosts);
		putToMap(shallow_water, tileTypeMap);

		TileType deep_water = new TileType();
		deep_water.setId(DEEP_WATER);
		deep_water.setName("Deep_water");
		deep_water.setDescription("Deep_water");
		deep_water.setGraphicsPath("/TileTypes/deep_water.svg");
		deep_water.setDefenseRating(0);
		ArrayList<MovementTypeCost> deep_waterMovementCosts = new ArrayList<>();
		deep_waterMovementCosts.add(new MovementTypeCost(MovementType.FOOT, null));
		deep_waterMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, null));
		deep_waterMovementCosts.add(new MovementTypeCost(MovementType.TIRE, null));
		deep_waterMovementCosts.add(new MovementTypeCost(MovementType.TRACK, null));
		deep_waterMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		deep_waterMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, 1));
		deep_waterMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		deep_waterMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		deep_waterMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, null));
		deep_waterMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, 1));
		deep_waterMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		deep_water.setMovementTypeCosts(deep_waterMovementCosts);
		putToMap(deep_water, tileTypeMap);

		TileType strongCurrentWater = new TileType();
		strongCurrentWater.setId(STRONG_CURRENT_WATER);
		strongCurrentWater.setName("Strong current water");
		strongCurrentWater.setDescription("Strong current water");
		strongCurrentWater.setGraphicsPath("/TileTypes/strong_current_water.svg");
		strongCurrentWater.setDefenseRating(0);
		ArrayList<MovementTypeCost> strongCurrentMovementCosts = new ArrayList<>();
		strongCurrentMovementCosts.add(new MovementTypeCost(MovementType.FOOT, null));
		strongCurrentMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, null));
		strongCurrentMovementCosts.add(new MovementTypeCost(MovementType.TIRE, null));
		strongCurrentMovementCosts.add(new MovementTypeCost(MovementType.TRACK, null));
		strongCurrentMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, 2));
		strongCurrentMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, 2));
		strongCurrentMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		strongCurrentMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		strongCurrentMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, null));
		strongCurrentMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, 1));
		strongCurrentMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		strongCurrentWater.setMovementTypeCosts(strongCurrentMovementCosts);
		putToMap(strongCurrentWater, tileTypeMap);

		TileType rockWater = new TileType();
		rockWater.setId(ROCK_WATER);
		rockWater.setName("Rock water");
		rockWater.setDescription("Rock water");
		rockWater.setGraphicsPath("/TileTypes/rock_water.svg");
		rockWater.setDefenseRating(1);
		ArrayList<MovementTypeCost> rockWaterMovementCosts = new ArrayList<>();
		rockWaterMovementCosts.add(new MovementTypeCost(MovementType.FOOT, null));
		rockWaterMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, null));
		rockWaterMovementCosts.add(new MovementTypeCost(MovementType.TIRE, null));
		rockWaterMovementCosts.add(new MovementTypeCost(MovementType.TRACK, null));
		rockWaterMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, 2));
		rockWaterMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, 2));
		rockWaterMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		rockWaterMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		rockWaterMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, null));
		rockWaterMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, 1));
		rockWaterMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		rockWater.setMovementTypeCosts(rockWaterMovementCosts);
		putToMap(rockWater, tileTypeMap);
		
		TileType barrier = new TileType();
		barrier.setId(BARRIER);
		barrier.setName("Barrier");
		barrier.setDescription("Barrier");
		barrier.setGraphicsPath("/TileTypes/barrier.svg");
		barrier.setDefenseRating(0);
		ArrayList<MovementTypeCost> barrierMovementCosts = new ArrayList<>();
		barrierMovementCosts.add(new MovementTypeCost(MovementType.FOOT, null));
		barrierMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, null));
		barrierMovementCosts.add(new MovementTypeCost(MovementType.TIRE, null));
		barrierMovementCosts.add(new MovementTypeCost(MovementType.TRACK, null));
		barrierMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		barrierMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		barrierMovementCosts.add(new MovementTypeCost(MovementType.FLYING, null));
		barrierMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, 1));
		barrierMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		barrierMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		barrierMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		barrier.setMovementTypeCosts(barrierMovementCosts);
		putToMap(barrier, tileTypeMap);
		
		TileType broken_barrier = new TileType();
		broken_barrier.setId(BROKEN_BARRIER);
		broken_barrier.setName("Broken_barrier");
		broken_barrier.setDescription("Broken_barrier");
		broken_barrier.setGraphicsPath("/TileTypes/broken_barrier.svg");
		broken_barrier.setDefenseRating(1);
		ArrayList<MovementTypeCost> broken_barrierMovementCosts = new ArrayList<>();
		broken_barrierMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		broken_barrierMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 1));
		broken_barrierMovementCosts.add(new MovementTypeCost(MovementType.TIRE, 2));
		broken_barrierMovementCosts.add(new MovementTypeCost(MovementType.TRACK, 1));
		broken_barrierMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		broken_barrierMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		broken_barrierMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		broken_barrierMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		broken_barrierMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		broken_barrierMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		broken_barrierMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		broken_barrier.setMovementTypeCosts(broken_barrierMovementCosts);
		putToMap(broken_barrier, tileTypeMap);
		
		TileType breakable_barrier = new TileType();
		breakable_barrier.setId(BREAKABLE_BARRIER);
		breakable_barrier.setName("Breakable_barrier");
		breakable_barrier.setDescription("Breakable_barrier");
		breakable_barrier.setGraphicsPath("/TileTypes/breakable_barrier.svg");
		breakable_barrier.setDefenseRating(0);
		ArrayList<MovementTypeCost> breakable_barrierMovementCosts = new ArrayList<>();
		breakable_barrierMovementCosts.add(new MovementTypeCost(MovementType.FOOT, null));
		breakable_barrierMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, null));
		breakable_barrierMovementCosts.add(new MovementTypeCost(MovementType.TIRE, null));
		breakable_barrierMovementCosts.add(new MovementTypeCost(MovementType.TRACK, null));
		breakable_barrierMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		breakable_barrierMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		breakable_barrierMovementCosts.add(new MovementTypeCost(MovementType.FLYING, null));
		breakable_barrierMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, 1));
		breakable_barrierMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		breakable_barrierMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		breakable_barrierMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		breakable_barrier.setMovementTypeCosts(breakable_barrierMovementCosts);
		putToMap(breakable_barrier, tileTypeMap);
		
		TileType air = new TileType();
		air.setId(AIR);
		air.setName("Air");
		air.setDescription("Air");
		air.setGraphicsPath("/TileTypes/air.svg");
		air.setDefenseRating(0);
		ArrayList<MovementTypeCost> airMovementCosts = new ArrayList<>();
		airMovementCosts.add(new MovementTypeCost(MovementType.FOOT, null));
		airMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, null));
		airMovementCosts.add(new MovementTypeCost(MovementType.TIRE, null));
		airMovementCosts.add(new MovementTypeCost(MovementType.TRACK, null));
		airMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		airMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		airMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		airMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		airMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, null));
		airMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		airMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		air.setMovementTypeCosts(airMovementCosts);
		putToMap(air, tileTypeMap);
		
		TileType town = new TileType();
		town.setId(TOWN);
		town.setName("Town");
		town.setDescription("Town");
		town.setGraphicsPath("/TileTypes/town.svg");
		town.setDefenseRating(3);
		ArrayList<MovementTypeCost> townMovementCosts = new ArrayList<>();
		townMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		townMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 1));
		townMovementCosts.add(new MovementTypeCost(MovementType.TIRE, 1));
		townMovementCosts.add(new MovementTypeCost(MovementType.TRACK, 1));
		townMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		townMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		townMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		townMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		townMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		townMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		townMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		town.setMovementTypeCosts(townMovementCosts);
		putToMap(town, tileTypeMap);
		
		TileType barracks = new TileType();
		barracks.setId(BARRACKS);
		barracks.setName("Barracks");
		barracks.setDescription("Barracks");
		barracks.setGraphicsPath("/TileTypes/barracks.svg");
		barracks.setDefenseRating(3);
		ArrayList<MovementTypeCost> barracksMovementCosts = new ArrayList<>();
		barracksMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		barracksMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 1));
		barracksMovementCosts.add(new MovementTypeCost(MovementType.TIRE, 1));
		barracksMovementCosts.add(new MovementTypeCost(MovementType.TRACK, 1));
		barracksMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		barracksMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		barracksMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		barracksMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, 1));
		barracksMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		barracksMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		barracksMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		barracks.setMovementTypeCosts(barracksMovementCosts);
		putToMap(barracks, tileTypeMap);
		
		TileType dock = new TileType();
		dock.setId(DOCK);
		dock.setName("Dock");
		dock.setDescription("Dock");
		dock.setGraphicsPath("/TileTypes/dock.svg");
		dock.setDefenseRating(3);
		ArrayList<MovementTypeCost> dockMovementCosts = new ArrayList<>();
		dockMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		dockMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 1));
		dockMovementCosts.add(new MovementTypeCost(MovementType.TIRE, 1));
		dockMovementCosts.add(new MovementTypeCost(MovementType.TRACK, 1));
		dockMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, 1));
		dockMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, 1));
		dockMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		dockMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		dockMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		dockMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, 1));
		dockMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		dock.setMovementTypeCosts(dockMovementCosts);
		putToMap(dock, tileTypeMap);
		
		TileType airport = new TileType();
		airport.setId(AIRPORT);
		airport.setName("Airport");
		airport.setDescription("Airport");
		airport.setGraphicsPath("/TileTypes/airport.svg");
		airport.setDefenseRating(3);
		ArrayList<MovementTypeCost> airportMovementCosts = new ArrayList<>();
		airportMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		airportMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 1));
		airportMovementCosts.add(new MovementTypeCost(MovementType.TIRE, 1));
		airportMovementCosts.add(new MovementTypeCost(MovementType.TRACK, 1));
		airportMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		airportMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		airportMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		airportMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		airportMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		airportMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		airportMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		airport.setMovementTypeCosts(airportMovementCosts);
		putToMap(airport, tileTypeMap);
		
		TileType president_office = new TileType();
		president_office.setId(PRESIDENT_OFFICE);
		president_office.setName("President_office");
		president_office.setDescription("President_office");
		president_office.setGraphicsPath("/TileTypes/president_office.svg");
		president_office.setDefenseRating(4);
		ArrayList<MovementTypeCost> president_officeMovementCosts = new ArrayList<>();
		president_officeMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		president_officeMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 1));
		president_officeMovementCosts.add(new MovementTypeCost(MovementType.TIRE, 1));
		president_officeMovementCosts.add(new MovementTypeCost(MovementType.TRACK, 1));
		president_officeMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		president_officeMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		president_officeMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		president_officeMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		president_officeMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		president_officeMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		president_officeMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		president_office.setMovementTypeCosts(president_officeMovementCosts);
		putToMap(president_office, tileTypeMap);
		
		TileType university = new TileType();
		university.setId(UNIVERSITY);
		university.setName("University");
		university.setDescription("University");
		university.setGraphicsPath("/TileTypes/university.svg");
		university.setDefenseRating(3);
		ArrayList<MovementTypeCost> universityMovementCosts = new ArrayList<>();
		universityMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		universityMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 1));
		universityMovementCosts.add(new MovementTypeCost(MovementType.TIRE, 1));
		universityMovementCosts.add(new MovementTypeCost(MovementType.TRACK, 1));
		universityMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		universityMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		universityMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		universityMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		universityMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		universityMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		universityMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		university.setMovementTypeCosts(universityMovementCosts);
		putToMap(university, tileTypeMap);
		
		TileType temple = new TileType();
		temple.setId(TEMPLE);
		temple.setName("Temple");
		temple.setDescription("Temple");
		temple.setGraphicsPath("/TileTypes/temple.svg");
		temple.setDefenseRating(3);
		ArrayList<MovementTypeCost> templeMovementCosts = new ArrayList<>();
		templeMovementCosts.add(new MovementTypeCost(MovementType.FOOT, 1));
		templeMovementCosts.add(new MovementTypeCost(MovementType.FOOT2, 1));
		templeMovementCosts.add(new MovementTypeCost(MovementType.TIRE, 1));
		templeMovementCosts.add(new MovementTypeCost(MovementType.TRACK, 1));
		templeMovementCosts.add(new MovementTypeCost(MovementType.DEEP_WATER, null));
		templeMovementCosts.add(new MovementTypeCost(MovementType.ALL_WATER, null));
		templeMovementCosts.add(new MovementTypeCost(MovementType.FLYING, 1));
		templeMovementCosts.add(new MovementTypeCost(MovementType.BARRIER, null));
		templeMovementCosts.add(new MovementTypeCost(MovementType.FREE_GROUND, 1));
		templeMovementCosts.add(new MovementTypeCost(MovementType.FREE_WATER, null));
		templeMovementCosts.add(new MovementTypeCost(MovementType.FREE, 1));
		temple.setMovementTypeCosts(templeMovementCosts);
		putToMap(temple, tileTypeMap);
		

		return tileTypeMap;
	}

	private static void putToMap(TileType TileType, ArrayList<TileType> tileTypeMap) {
		tileTypeMap.add(TileType);
	}
}
