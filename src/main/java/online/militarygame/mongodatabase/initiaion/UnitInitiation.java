package online.militarygame.mongodatabase.initiaion;

import online.militarygame.mongodatabase.enums.unit.MovementType;
import online.militarygame.mongodatabase.models.UnitType;

import java.util.HashMap;
import java.util.Map;

public class UnitInitiation {
	public static final int Assault_rifle = 100;
	public static final int Bazooka = 200;
	public static final int Bike = 300;
	public static final int Car = 400;
	public static final int Supplier = 500;
	public static final int Small_cannon = 600;
	public static final int Big_cannon = 700;
	public static final int Air_cannon = 800;
	public static final int Mobile_flak = 900;
	public static final int Small_tank = 1000;
	public static final int Big_tank = 1100;
	public static final int Super_tank = 1200;
	public static final int Giant_tank = 1300;
	public static final int Fighter = 10000;
	public static final int Stealth_fighter = 10100;
	public static final int Bomber = 10200;
	public static final int Flying_bomb = 10300;
	public static final int Attack_helicopter = 10400;
	public static final int Support_helicopter = 10500;
	public static final int Transport_ship = 20000;
	public static final int Repair_ship = 20100;
	public static final int Submarine = 20200;
	public static final int Combat_ship = 20300;
	public static final int Cannon_ship = 20400;
	public static final int Aircraft_carrier = 20500;

	public static final int Barrier_cannon = 30000;

	public static Map<Integer, UnitType> makeUnitTypeMap1()
	{
		Map<Integer, UnitType> unitTypes = new HashMap<>();

		UnitType assault_rifle = new UnitType();
		assault_rifle.setId(Assault_rifle);
		assault_rifle.setName("Assault_rifle");
		assault_rifle.setGraphicsName("/units/Assault_rifle.svg");
		assault_rifle.setMovementType(MovementType.FOOT);
		assault_rifle.setMovement(3);
		assault_rifle.setBanned(false);
		assault_rifle.setValue(10);
		assault_rifle.setMaxAmmo(0);
		assault_rifle.setMaxFuel(99);
		assault_rifle.setFuelPerTurn(0);
		assault_rifle.setDestroyOnFuelOut(false);
		assault_rifle.setCanStealth(false);
		assault_rifle.setAttackAfterMove(true);
		assault_rifle.setCounterAttackMelee(true);
		assault_rifle.setCounterAttackRanged(false);
		assault_rifle.setMinRange(1);
		assault_rifle.setMaxRange(1);
		assault_rifle.setCanCapture(true);
		Map<Integer, Double> damageValuesAssault_rifle = new HashMap<>();
		damageValuesAssault_rifle.put(Assault_rifle, 0.D);
		damageValuesAssault_rifle.put(Bazooka, 0.D);
		damageValuesAssault_rifle.put(Bike, 0.D);
		damageValuesAssault_rifle.put(Car, 0.D);
		damageValuesAssault_rifle.put(Supplier, 0.D);
		damageValuesAssault_rifle.put(Small_cannon, 0.D);
		damageValuesAssault_rifle.put(Big_cannon, 0.D);
		damageValuesAssault_rifle.put(Air_cannon, 0.D);
		damageValuesAssault_rifle.put(Mobile_flak, 0.D);
		damageValuesAssault_rifle.put(Small_tank, 0.D);
		damageValuesAssault_rifle.put(Big_tank, 0.D);
		damageValuesAssault_rifle.put(Super_tank, 0.D);
		damageValuesAssault_rifle.put(Giant_tank, 0.D);
		damageValuesAssault_rifle.put(Attack_helicopter, 0.D);
		damageValuesAssault_rifle.put(Support_helicopter, 0.D);
		assault_rifle.setDamageValues(damageValuesAssault_rifle);
		unitTypes.put(Assault_rifle, assault_rifle);

		UnitType bazooka = new UnitType();
		bazooka.setId(Bazooka);
		bazooka.setName("Bazooka");
		bazooka.setGraphicsName("/units/Bazooka.svg");
		bazooka.setMovementType(MovementType.FOOT2);
		bazooka.setMovement(2);
		bazooka.setBanned(false);
		bazooka.setValue(30);
		bazooka.setMaxAmmo(3);
		bazooka.setMaxFuel(99);
		bazooka.setFuelPerTurn(0);
		bazooka.setDestroyOnFuelOut(false);
		bazooka.setCanStealth(false);
		bazooka.setAttackAfterMove(true);
		bazooka.setCounterAttackMelee(true);
		bazooka.setCounterAttackRanged(false);
		bazooka.setMinRange(1);
		bazooka.setMaxRange(1);
		bazooka.setCanCapture(true);
		Map<Integer, Double> damageValuesBazooka = new HashMap<>();
		damageValuesBazooka.put(Assault_rifle, 0.D);
		damageValuesBazooka.put(Bazooka, 0.D);
		damageValuesBazooka.put(Bike, 0.D);
		damageValuesBazooka.put(Car, 0.D);
		damageValuesBazooka.put(Supplier, 0.D);
		damageValuesBazooka.put(Small_cannon, 0.D);
		damageValuesBazooka.put(Big_cannon, 0.D);
		damageValuesBazooka.put(Air_cannon, 0.D);
		damageValuesBazooka.put(Mobile_flak, 0.D);
		damageValuesBazooka.put(Small_tank, 0.D);
		damageValuesBazooka.put(Big_tank, 0.D);
		damageValuesBazooka.put(Super_tank, 0.D);
		damageValuesBazooka.put(Giant_tank, 0.D);
		damageValuesBazooka.put(Attack_helicopter, 0.D);
		damageValuesBazooka.put(Support_helicopter, 0.D);
		bazooka.setDamageValues(damageValuesBazooka);
		unitTypes.put(Bazooka, bazooka);

//		UnitType bike = new UnitType();
//		bike.setId(Bike);
//		bike.setName("Bike");
//		bike.setGraphicsName("/units/Bike.svg");
//		bike.setMovementType(MovementType.FOOT);
//		bike.setBaseType(BaseType.GROUND);
//		bike.setMovement(1);
//		bike.setBanned(false);
//		bike.setValue(10);
//		bike.setMaxAmmo(0);
//		bike.setMaxFuel(99);
//		bike.setFuelPerTurn(0);
//		bike.setDestroyOnFuelOut(false);
//		bike.setCanStealth(false);
//		bike.setAttackAfterMove(true);
//		bike.setCounterAttackMelee(true);
//		bike.setCounterAttackRanged(false);
//		bike.setAttackType(AttackType.MELEE);
//		bike.setMinRange(1);
//		bike.setMaxRange(1);
//		bike.setCanCapture(false);
//		Map<Integer, Double> damageValuesBike = new HashMap<>();
//		damageValuesBike.put(Assault_rifle, 0.D);
//		damageValuesBike.put(Bazooka, 0.D);
//		damageValuesBike.put(Bike, 0.D);
//		damageValuesBike.put(Car, 0.D);
//		damageValuesBike.put(Supplier, 0.D);
//		damageValuesBike.put(Small_cannon, 0.D);
//		damageValuesBike.put(Big_cannon, 0.D);
//		damageValuesBike.put(Air_cannon, 0.D);
//		damageValuesBike.put(Mobile_flak, 0.D);
//		damageValuesBike.put(Small_tank, 0.D);
//		damageValuesBike.put(Big_tank, 0.D);
//		damageValuesBike.put(Super_tank, 0.D);
//		damageValuesBike.put(Giant_tank, 0.D);
//		damageValuesBike.put(Fighter, 0.D);
//		damageValuesBike.put(Stealth_fighter, 0.D);
//		damageValuesBike.put(Bomber, 0.D);
//		damageValuesBike.put(Flying_bomb, 0.D);
//		damageValuesBike.put(Attack_helicopter, 0.D);
//		damageValuesBike.put(Support_helicopter, 0.D);
//		damageValuesBike.put(Transport_ship, 0.D);
//		damageValuesBike.put(Repair_ship, 0.D);
//		damageValuesBike.put(Submarine, 0.D);
//		damageValuesBike.put(Combat_ship, 0.D);
//		damageValuesBike.put(Cannon_ship, 0.D);
//		damageValuesBike.put(Aircraft_carrier, 0.D);
//		bike.setDamageValues(damageValuesBike);
//		unitTypes.put(Bike, bike);

		UnitType car = new UnitType();
		car.setId(Car);
		car.setName("Car");
		car.setGraphicsName("/units/Car.svg");
		car.setMovementType(MovementType.TIRE);
		car.setMovement(9);
		car.setBanned(false);
		car.setValue(40);
		car.setMaxAmmo(0);
		car.setMaxFuel(99);
		car.setFuelPerTurn(0);
		car.setDestroyOnFuelOut(false);
		car.setCanStealth(false);
		car.setAttackAfterMove(true);
		car.setCounterAttackMelee(true);
		car.setCounterAttackRanged(false);
		car.setMinRange(1);
		car.setMaxRange(1);
		car.setCanCapture(false);
		Map<Integer, Double> damageValuesCar = new HashMap<>();
		damageValuesCar.put(Assault_rifle, 0.D);
		damageValuesCar.put(Bazooka, 0.D);
		damageValuesCar.put(Bike, 0.D);
		damageValuesCar.put(Car, 0.D);
		damageValuesCar.put(Supplier, 0.D);
		damageValuesCar.put(Small_cannon, 0.D);
		damageValuesCar.put(Big_cannon, 0.D);
		damageValuesCar.put(Air_cannon, 0.D);
		damageValuesCar.put(Mobile_flak, 0.D);
		damageValuesCar.put(Small_tank, 0.D);
		damageValuesCar.put(Big_tank, 0.D);
		damageValuesCar.put(Super_tank, 0.D);
		damageValuesCar.put(Giant_tank, 0.D);
		damageValuesCar.put(Attack_helicopter, 0.D);
		damageValuesCar.put(Support_helicopter, 0.D);
		car.setDamageValues(damageValuesCar);
		unitTypes.put(Car, car);

		UnitType supplier = new UnitType();
		supplier.setId(Supplier);
		supplier.setName("Supplier");
		supplier.setGraphicsName("/units/Supplier.svg");
		supplier.setMovementType(MovementType.TRACK);
		supplier.setMovement(6);
		supplier.setBanned(false);
		supplier.setValue(50);
		supplier.setMaxAmmo(0);
		supplier.setMaxFuel(99);
		supplier.setFuelPerTurn(0);
		supplier.setDestroyOnFuelOut(false);
		supplier.setCanStealth(false);
		supplier.setAttackAfterMove(false);
		supplier.setCounterAttackMelee(false);
		supplier.setCounterAttackRanged(false);
		supplier.setMinRange(0);
		supplier.setMaxRange(0);
		supplier.setCanCapture(false);
		Map<Integer, Double> damageValuesSupplier = new HashMap<>();
		supplier.setDamageValues(damageValuesSupplier);
		unitTypes.put(Supplier, supplier);

		UnitType small_cannon = new UnitType();
		small_cannon.setId(Small_cannon);
		small_cannon.setName("Small_cannon");
		small_cannon.setGraphicsName("/units/Small_cannon.svg");
		small_cannon.setMovementType(MovementType.TRACK);
		small_cannon.setMovement(6);
		small_cannon.setBanned(false);
		small_cannon.setValue(60);
		small_cannon.setMaxAmmo(6);
		small_cannon.setMaxFuel(99);
		small_cannon.setFuelPerTurn(0);
		small_cannon.setDestroyOnFuelOut(false);
		small_cannon.setCanStealth(false);
		small_cannon.setAttackAfterMove(false);
		small_cannon.setCounterAttackMelee(false);
		small_cannon.setCounterAttackRanged(false);
		small_cannon.setMinRange(2);
		small_cannon.setMaxRange(3);
		small_cannon.setCanCapture(false);
		Map<Integer, Double> damageValuesSmall_cannon = new HashMap<>();
		damageValuesSmall_cannon.put(Assault_rifle, 0.D);
		damageValuesSmall_cannon.put(Bazooka, 0.D);
		damageValuesSmall_cannon.put(Bike, 0.D);
		damageValuesSmall_cannon.put(Car, 0.D);
		damageValuesSmall_cannon.put(Supplier, 0.D);
		damageValuesSmall_cannon.put(Small_cannon, 0.D);
		damageValuesSmall_cannon.put(Big_cannon, 0.D);
		damageValuesSmall_cannon.put(Air_cannon, 0.D);
		damageValuesSmall_cannon.put(Mobile_flak, 0.D);
		damageValuesSmall_cannon.put(Small_tank, 0.D);
		damageValuesSmall_cannon.put(Big_tank, 0.D);
		damageValuesSmall_cannon.put(Super_tank, 0.D);
		damageValuesSmall_cannon.put(Giant_tank, 0.D);
		damageValuesSmall_cannon.put(Fighter, 0.D);
		damageValuesSmall_cannon.put(Transport_ship, 0.D);
		damageValuesSmall_cannon.put(Repair_ship, 0.D);
		damageValuesSmall_cannon.put(Submarine, 0.D);
		damageValuesSmall_cannon.put(Combat_ship, 0.D);
		damageValuesSmall_cannon.put(Cannon_ship, 0.D);
		damageValuesSmall_cannon.put(Aircraft_carrier, 0.D);
		small_cannon.setDamageValues(damageValuesSmall_cannon);
		unitTypes.put(Small_cannon, small_cannon);

		UnitType big_cannon = new UnitType();
		big_cannon.setId(Big_cannon);
		big_cannon.setName("Big_cannon");
		big_cannon.setGraphicsName("/units/Big_cannon.svg");
		big_cannon.setMovementType(MovementType.TIRE);
		big_cannon.setMovement(5);
		big_cannon.setBanned(false);
		big_cannon.setValue(150);
		big_cannon.setMaxAmmo(6);
		big_cannon.setMaxFuel(99);
		big_cannon.setFuelPerTurn(0);
		big_cannon.setDestroyOnFuelOut(false);
		big_cannon.setCanStealth(false);
		big_cannon.setAttackAfterMove(false);
		big_cannon.setCounterAttackMelee(false);
		big_cannon.setCounterAttackRanged(false);
		big_cannon.setMinRange(3);
		big_cannon.setMaxRange(5);
		big_cannon.setCanCapture(false);
		Map<Integer, Double> damageValuesBig_cannon = new HashMap<>();
		damageValuesBig_cannon.put(Assault_rifle, 0.D);
		damageValuesBig_cannon.put(Bazooka, 0.D);
		damageValuesBig_cannon.put(Bike, 0.D);
		damageValuesBig_cannon.put(Car, 0.D);
		damageValuesBig_cannon.put(Supplier, 0.D);
		damageValuesBig_cannon.put(Small_cannon, 0.D);
		damageValuesBig_cannon.put(Big_cannon, 0.D);
		damageValuesBig_cannon.put(Air_cannon, 0.D);
		damageValuesBig_cannon.put(Mobile_flak, 0.D);
		damageValuesBig_cannon.put(Small_tank, 0.D);
		damageValuesBig_cannon.put(Big_tank, 0.D);
		damageValuesBig_cannon.put(Super_tank, 0.D);
		damageValuesBig_cannon.put(Giant_tank, 0.D);
		damageValuesBig_cannon.put(Transport_ship, 0.D);
		damageValuesBig_cannon.put(Repair_ship, 0.D);
		damageValuesBig_cannon.put(Submarine, 0.D);
		damageValuesBig_cannon.put(Combat_ship, 0.D);
		damageValuesBig_cannon.put(Cannon_ship, 0.D);
		damageValuesBig_cannon.put(Aircraft_carrier, 0.D);
		big_cannon.setDamageValues(damageValuesBig_cannon);
		unitTypes.put(Big_cannon, big_cannon);

		UnitType air_cannon = new UnitType();
		air_cannon.setId(Air_cannon);
		air_cannon.setName("Air_cannon");
		air_cannon.setGraphicsName("/units/Air_cannon.svg");
		air_cannon.setMovementType(MovementType.TIRE);
		air_cannon.setMovement(5);
		air_cannon.setBanned(false);
		air_cannon.setValue(120);
		air_cannon.setMaxAmmo(6);
		air_cannon.setMaxFuel(99);
		air_cannon.setFuelPerTurn(0);
		air_cannon.setDestroyOnFuelOut(false);
		air_cannon.setCanStealth(false);
		air_cannon.setAttackAfterMove(false);
		air_cannon.setCounterAttackMelee(false);
		air_cannon.setCounterAttackRanged(false);
		air_cannon.setMinRange(3);
		air_cannon.setMaxRange(6);
		air_cannon.setCanCapture(false);
		Map<Integer, Double> damageValuesAir_cannon = new HashMap<>();
		damageValuesAir_cannon.put(Fighter, 0.D);
		damageValuesAir_cannon.put(Stealth_fighter, 0.D);
		damageValuesAir_cannon.put(Bomber, 0.D);
		damageValuesAir_cannon.put(Flying_bomb, 0.D);
		damageValuesAir_cannon.put(Attack_helicopter, 0.D);
		damageValuesAir_cannon.put(Support_helicopter, 0.D);
		air_cannon.setDamageValues(damageValuesAir_cannon);
		unitTypes.put(Air_cannon, air_cannon);

		UnitType mobile_flak = new UnitType();
		mobile_flak.setId(Mobile_flak);
		mobile_flak.setName("Mobile_flak");
		mobile_flak.setGraphicsName("/units/Mobile_flak.svg");
		mobile_flak.setMovementType(MovementType.TRACK);
		mobile_flak.setMovement(6);
		mobile_flak.setBanned(false);
		mobile_flak.setValue(80);
		mobile_flak.setMaxAmmo(8);
		mobile_flak.setMaxFuel(99);
		mobile_flak.setFuelPerTurn(0);
		mobile_flak.setDestroyOnFuelOut(false);
		mobile_flak.setCanStealth(false);
		mobile_flak.setAttackAfterMove(true);
		mobile_flak.setCounterAttackMelee(true);
		mobile_flak.setCounterAttackRanged(false);
		mobile_flak.setMinRange(1);
		mobile_flak.setMaxRange(1);
		mobile_flak.setCanCapture(false);
		Map<Integer, Double> damageValuesMobile_flak = new HashMap<>();
		damageValuesMobile_flak.put(Assault_rifle, 0.D);
		damageValuesMobile_flak.put(Bazooka, 0.D);
		damageValuesMobile_flak.put(Bike, 0.D);
		damageValuesMobile_flak.put(Car, 0.D);
		damageValuesMobile_flak.put(Supplier, 0.D);
		damageValuesMobile_flak.put(Small_cannon, 0.D);
		damageValuesMobile_flak.put(Big_cannon, 0.D);
		damageValuesMobile_flak.put(Air_cannon, 0.D);
		damageValuesMobile_flak.put(Mobile_flak, 0.D);
		damageValuesMobile_flak.put(Small_tank, 0.D);
		damageValuesMobile_flak.put(Big_tank, 0.D);
		damageValuesMobile_flak.put(Super_tank, 0.D);
		damageValuesMobile_flak.put(Giant_tank, 0.D);
		damageValuesMobile_flak.put(Fighter, 0.D);
		damageValuesMobile_flak.put(Stealth_fighter, 0.D);
		damageValuesMobile_flak.put(Bomber, 0.D);
		damageValuesMobile_flak.put(Flying_bomb, 0.D);
		damageValuesMobile_flak.put(Attack_helicopter, 0.D);
		damageValuesMobile_flak.put(Support_helicopter, 0.D);
		mobile_flak.setDamageValues(damageValuesMobile_flak);
		unitTypes.put(Mobile_flak, mobile_flak);

		UnitType small_tank = new UnitType();
		small_tank.setId(Small_tank);
		small_tank.setName("Small_tank");
		small_tank.setGraphicsName("/units/Small_tank.svg");
		small_tank.setMovementType(MovementType.TRACK);
		small_tank.setMovement(6);
		small_tank.setBanned(false);
		small_tank.setValue(10);
		small_tank.setMaxAmmo(7);
		small_tank.setMaxFuel(99);
		small_tank.setFuelPerTurn(0);
		small_tank.setDestroyOnFuelOut(false);
		small_tank.setCanStealth(false);
		small_tank.setAttackAfterMove(true);
		small_tank.setCounterAttackMelee(true);
		small_tank.setCounterAttackRanged(false);
		small_tank.setMinRange(1);
		small_tank.setMaxRange(1);
		small_tank.setCanCapture(false);
		Map<Integer, Double> damageValuesSmall_tank = new HashMap<>();
		damageValuesSmall_tank.put(Assault_rifle, 0.D);
		damageValuesSmall_tank.put(Bazooka, 0.D);
		damageValuesSmall_tank.put(Bike, 0.D);
		damageValuesSmall_tank.put(Car, 0.D);
		damageValuesSmall_tank.put(Supplier, 0.D);
		damageValuesSmall_tank.put(Small_cannon, 0.D);
		damageValuesSmall_tank.put(Big_cannon, 0.D);
		damageValuesSmall_tank.put(Air_cannon, 0.D);
		damageValuesSmall_tank.put(Mobile_flak, 0.D);
		damageValuesSmall_tank.put(Small_tank, 0.D);
		damageValuesSmall_tank.put(Big_tank, 0.D);
		damageValuesSmall_tank.put(Super_tank, 0.D);
		damageValuesSmall_tank.put(Giant_tank, 0.D);
		damageValuesSmall_tank.put(Attack_helicopter, 0.D);
		damageValuesSmall_tank.put(Support_helicopter, 0.D);
		damageValuesSmall_tank.put(Transport_ship, 0.D);
		damageValuesSmall_tank.put(Repair_ship, 0.D);
		damageValuesSmall_tank.put(Submarine, 0.D);
		damageValuesSmall_tank.put(Combat_ship, 0.D);
		damageValuesSmall_tank.put(Cannon_ship, 0.D);
		damageValuesSmall_tank.put(Aircraft_carrier, 0.D);
		small_tank.setDamageValues(damageValuesSmall_tank);
		unitTypes.put(Small_tank, small_tank);

		UnitType big_tank = new UnitType();
		big_tank.setId(Big_tank);
		big_tank.setName("Big_tank");
		big_tank.setGraphicsName("/units/Big_tank.svg");
		big_tank.setMovementType(MovementType.TRACK);
		big_tank.setMovement(5);
		big_tank.setBanned(false);
		big_tank.setValue(150);
		big_tank.setMaxAmmo(6);
		big_tank.setMaxFuel(99);
		big_tank.setFuelPerTurn(0);
		big_tank.setDestroyOnFuelOut(false);
		big_tank.setCanStealth(false);
		big_tank.setAttackAfterMove(true);
		big_tank.setCounterAttackMelee(true);
		big_tank.setCounterAttackRanged(false);
		big_tank.setMinRange(1);
		big_tank.setMaxRange(1);
		big_tank.setCanCapture(false);
		Map<Integer, Double> damageValuesBig_tank = new HashMap<>();
		damageValuesBig_tank.put(Assault_rifle, 0.D);
		damageValuesBig_tank.put(Bazooka, 0.D);
		damageValuesBig_tank.put(Bike, 0.D);
		damageValuesBig_tank.put(Car, 0.D);
		damageValuesBig_tank.put(Supplier, 0.D);
		damageValuesBig_tank.put(Small_cannon, 0.D);
		damageValuesBig_tank.put(Big_cannon, 0.D);
		damageValuesBig_tank.put(Air_cannon, 0.D);
		damageValuesBig_tank.put(Mobile_flak, 0.D);
		damageValuesBig_tank.put(Small_tank, 0.D);
		damageValuesBig_tank.put(Big_tank, 0.D);
		damageValuesBig_tank.put(Super_tank, 0.D);
		damageValuesBig_tank.put(Giant_tank, 0.D);
		damageValuesBig_tank.put(Attack_helicopter, 0.D);
		damageValuesBig_tank.put(Support_helicopter, 0.D);
		damageValuesBig_tank.put(Transport_ship, 0.D);
		damageValuesBig_tank.put(Repair_ship, 0.D);
		damageValuesBig_tank.put(Submarine, 0.D);
		damageValuesBig_tank.put(Combat_ship, 0.D);
		damageValuesBig_tank.put(Cannon_ship, 0.D);
		damageValuesBig_tank.put(Aircraft_carrier, 0.D);
		big_tank.setDamageValues(damageValuesBig_tank);
		unitTypes.put(Big_tank, big_tank);

		UnitType super_tank = new UnitType();
		super_tank.setId(Super_tank);
		super_tank.setName("Super_tank");
		super_tank.setGraphicsName("/units/Super_tank.svg");
		super_tank.setMovementType(MovementType.TRACK);
		super_tank.setMovement(6);
		super_tank.setBanned(false);
		super_tank.setValue(210);
		super_tank.setMaxAmmo(6);
		super_tank.setMaxFuel(99);
		super_tank.setFuelPerTurn(0);
		super_tank.setDestroyOnFuelOut(false);
		super_tank.setCanStealth(false);
		super_tank.setAttackAfterMove(true);
		super_tank.setCounterAttackMelee(true);
		super_tank.setCounterAttackRanged(false);
		super_tank.setMinRange(1);
		super_tank.setMaxRange(1);
		super_tank.setCanCapture(false);
		Map<Integer, Double> damageValuesSuper_tank = new HashMap<>();
		damageValuesSuper_tank.put(Assault_rifle, 0.D);
		damageValuesSuper_tank.put(Bazooka, 0.D);
		damageValuesSuper_tank.put(Bike, 0.D);
		damageValuesSuper_tank.put(Car, 0.D);
		damageValuesSuper_tank.put(Supplier, 0.D);
		damageValuesSuper_tank.put(Small_cannon, 0.D);
		damageValuesSuper_tank.put(Big_cannon, 0.D);
		damageValuesSuper_tank.put(Air_cannon, 0.D);
		damageValuesSuper_tank.put(Mobile_flak, 0.D);
		damageValuesSuper_tank.put(Small_tank, 0.D);
		damageValuesSuper_tank.put(Big_tank, 0.D);
		damageValuesSuper_tank.put(Super_tank, 0.D);
		damageValuesSuper_tank.put(Giant_tank, 0.D);
		damageValuesSuper_tank.put(Attack_helicopter, 0.D);
		damageValuesSuper_tank.put(Support_helicopter, 0.D);
		damageValuesSuper_tank.put(Transport_ship, 0.D);
		damageValuesSuper_tank.put(Repair_ship, 0.D);
		damageValuesSuper_tank.put(Submarine, 0.D);
		damageValuesSuper_tank.put(Combat_ship, 0.D);
		damageValuesSuper_tank.put(Cannon_ship, 0.D);
		damageValuesSuper_tank.put(Aircraft_carrier, 0.D);
		super_tank.setDamageValues(damageValuesSuper_tank);
		unitTypes.put(Super_tank, super_tank);

		UnitType giant_tank = new UnitType();
		giant_tank.setId(Giant_tank);
		giant_tank.setName("Giant_tank");
		giant_tank.setGraphicsName("/units/Giant_tank.svg");
		giant_tank.setMovementType(MovementType.TRACK);
		giant_tank.setMovement(4);
		giant_tank.setBanned(false);
		giant_tank.setValue(250);
		giant_tank.setMaxAmmo(3);
		giant_tank.setMaxFuel(60);
		giant_tank.setFuelPerTurn(0);
		giant_tank.setDestroyOnFuelOut(false);
		giant_tank.setCanStealth(false);
		giant_tank.setAttackAfterMove(true);
		giant_tank.setCounterAttackMelee(true);
		giant_tank.setCounterAttackRanged(false);
		giant_tank.setMinRange(1);
		giant_tank.setMaxRange(1);
		giant_tank.setCanCapture(false);
		Map<Integer, Double> damageValuesGiant_tank = new HashMap<>();
		damageValuesGiant_tank.put(Assault_rifle, 0.D);
		damageValuesGiant_tank.put(Bazooka, 0.D);
		damageValuesGiant_tank.put(Bike, 0.D);
		damageValuesGiant_tank.put(Car, 0.D);
		damageValuesGiant_tank.put(Supplier, 0.D);
		damageValuesGiant_tank.put(Small_cannon, 0.D);
		damageValuesGiant_tank.put(Big_cannon, 0.D);
		damageValuesGiant_tank.put(Air_cannon, 0.D);
		damageValuesGiant_tank.put(Mobile_flak, 0.D);
		damageValuesGiant_tank.put(Small_tank, 0.D);
		damageValuesGiant_tank.put(Big_tank, 0.D);
		damageValuesGiant_tank.put(Super_tank, 0.D);
		damageValuesGiant_tank.put(Giant_tank, 0.D);
		damageValuesGiant_tank.put(Attack_helicopter, 0.D);
		damageValuesGiant_tank.put(Support_helicopter, 0.D);
		damageValuesGiant_tank.put(Transport_ship, 0.D);
		damageValuesGiant_tank.put(Repair_ship, 0.D);
		damageValuesGiant_tank.put(Submarine, 0.D);
		damageValuesGiant_tank.put(Combat_ship, 0.D);
		damageValuesGiant_tank.put(Cannon_ship, 0.D);
		damageValuesGiant_tank.put(Aircraft_carrier, 0.D);
		giant_tank.setDamageValues(damageValuesGiant_tank);
		unitTypes.put(Giant_tank, giant_tank);

		UnitType fighter = new UnitType();
		fighter.setId(Fighter);
		fighter.setName("Fighter");
		fighter.setGraphicsName("/units/Fighter.svg");
		fighter.setMovementType(MovementType.FLYING);
		fighter.setMovement(9);
		fighter.setBanned(false);
		fighter.setValue(200);
		fighter.setMaxAmmo(6);
		fighter.setMaxFuel(99);
		fighter.setFuelPerTurn(5);
		fighter.setDestroyOnFuelOut(true);
		fighter.setCanStealth(false);
		fighter.setAttackAfterMove(true);
		fighter.setCounterAttackMelee(true);
		fighter.setCounterAttackRanged(false);
		fighter.setMinRange(1);
		fighter.setMaxRange(1);
		fighter.setCanCapture(false);
		Map<Integer, Double> damageValuesFighter = new HashMap<>();
		damageValuesFighter.put(Fighter, 0.D);
		damageValuesFighter.put(Stealth_fighter, 0.D);
		damageValuesFighter.put(Bomber, 0.D);
		damageValuesFighter.put(Flying_bomb, 0.D);
		damageValuesFighter.put(Attack_helicopter, 0.D);
		damageValuesFighter.put(Support_helicopter, 0.D);
		damageValuesFighter.put(Aircraft_carrier, 0.D);
		fighter.setDamageValues(damageValuesFighter);
		unitTypes.put(Fighter, fighter);

		UnitType stealth_fighter = new UnitType();
		stealth_fighter.setId(Stealth_fighter);
		stealth_fighter.setName("Stealth_fighter");
		stealth_fighter.setGraphicsName("/units/Stealth_fighter.svg");
		stealth_fighter.setMovementType(MovementType.FLYING);
		stealth_fighter.setMovement(7);
		stealth_fighter.setBanned(false);
		stealth_fighter.setValue(240);
		stealth_fighter.setMaxAmmo(4);
		stealth_fighter.setMaxFuel(90);
		stealth_fighter.setFuelPerTurn(5);
		stealth_fighter.setDestroyOnFuelOut(true);
		stealth_fighter.setCanStealth(false);
		stealth_fighter.setAttackAfterMove(true);
		stealth_fighter.setCounterAttackMelee(true);
		stealth_fighter.setCounterAttackRanged(false);
		stealth_fighter.setMinRange(1);
		stealth_fighter.setMaxRange(1);
		stealth_fighter.setCanCapture(false);
		Map<Integer, Double> damageValuesStealth_fighter = new HashMap<>();
		damageValuesStealth_fighter.put(Assault_rifle, 0.D);
		damageValuesStealth_fighter.put(Bazooka, 0.D);
		damageValuesStealth_fighter.put(Bike, 0.D);
		damageValuesStealth_fighter.put(Car, 0.D);
		damageValuesStealth_fighter.put(Supplier, 0.D);
		damageValuesStealth_fighter.put(Small_cannon, 0.D);
		damageValuesStealth_fighter.put(Big_cannon, 0.D);
		damageValuesStealth_fighter.put(Air_cannon, 0.D);
		damageValuesStealth_fighter.put(Mobile_flak, 0.D);
		damageValuesStealth_fighter.put(Small_tank, 0.D);
		damageValuesStealth_fighter.put(Big_tank, 0.D);
		damageValuesStealth_fighter.put(Super_tank, 0.D);
		damageValuesStealth_fighter.put(Giant_tank, 0.D);
		damageValuesStealth_fighter.put(Fighter, 0.D);
		damageValuesStealth_fighter.put(Stealth_fighter, 0.D);
		damageValuesStealth_fighter.put(Bomber, 0.D);
		damageValuesStealth_fighter.put(Flying_bomb, 0.D);
		damageValuesStealth_fighter.put(Attack_helicopter, 0.D);
		damageValuesStealth_fighter.put(Support_helicopter, 0.D);
		damageValuesStealth_fighter.put(Transport_ship, 0.D);
		damageValuesStealth_fighter.put(Repair_ship, 0.D);
		damageValuesStealth_fighter.put(Submarine, 0.D);
		damageValuesStealth_fighter.put(Combat_ship, 0.D);
		damageValuesStealth_fighter.put(Cannon_ship, 0.D);
		damageValuesStealth_fighter.put(Aircraft_carrier, 0.D);
		stealth_fighter.setDamageValues(damageValuesStealth_fighter);
		unitTypes.put(Stealth_fighter, stealth_fighter);

		UnitType bomber = new UnitType();
		bomber.setId(Bomber);
		bomber.setName("Bomber");
		bomber.setGraphicsName("/units/Bomber.svg");
		bomber.setMovementType(MovementType.FLYING);
		bomber.setMovement(7);
		bomber.setBanned(false);
		bomber.setValue(220);
		bomber.setMaxAmmo(9);
		bomber.setMaxFuel(99);
		bomber.setFuelPerTurn(5);
		bomber.setDestroyOnFuelOut(true);
		bomber.setCanStealth(false);
		bomber.setAttackAfterMove(true);
		bomber.setCounterAttackMelee(true);
		bomber.setCounterAttackRanged(false);
		bomber.setMinRange(1);
		bomber.setMaxRange(1);
		bomber.setCanCapture(false);
		Map<Integer, Double> damageValuesBomber = new HashMap<>();
		damageValuesBomber.put(Assault_rifle, 0.D);
		damageValuesBomber.put(Bazooka, 0.D);
		damageValuesBomber.put(Bike, 0.D);
		damageValuesBomber.put(Car, 0.D);
		damageValuesBomber.put(Supplier, 0.D);
		damageValuesBomber.put(Small_cannon, 0.D);
		damageValuesBomber.put(Big_cannon, 0.D);
		damageValuesBomber.put(Air_cannon, 0.D);
		damageValuesBomber.put(Mobile_flak, 0.D);
		damageValuesBomber.put(Small_tank, 0.D);
		damageValuesBomber.put(Big_tank, 0.D);
		damageValuesBomber.put(Super_tank, 0.D);
		damageValuesBomber.put(Giant_tank, 0.D);
		damageValuesBomber.put(Transport_ship, 0.D);
		damageValuesBomber.put(Repair_ship, 0.D);
		damageValuesBomber.put(Submarine, 0.D);
		damageValuesBomber.put(Combat_ship, 0.D);
		damageValuesBomber.put(Cannon_ship, 0.D);
		damageValuesBomber.put(Aircraft_carrier, 0.D);
		bomber.setDamageValues(damageValuesBomber);

		unitTypes.put(Bomber, bomber);
		UnitType flying_bomb = new UnitType();
		flying_bomb.setId(Flying_bomb);
		flying_bomb.setName("Flying_bomb");
		flying_bomb.setGraphicsName("/units/Flying_bomb.svg");
		flying_bomb.setMovementType(MovementType.FLYING);
		flying_bomb.setMovement(9);
		flying_bomb.setBanned(false);
		flying_bomb.setValue(250);
		flying_bomb.setMaxAmmo(0);
		flying_bomb.setMaxFuel(99);
		flying_bomb.setFuelPerTurn(5);
		flying_bomb.setDestroyOnFuelOut(true);
		flying_bomb.setCanStealth(false);
		flying_bomb.setAttackAfterMove(false);
		flying_bomb.setCounterAttackMelee(false);
		flying_bomb.setCounterAttackRanged(false);
		flying_bomb.setMinRange(0);
		flying_bomb.setMaxRange(0);
		flying_bomb.setCanCapture(false);
		Map<Integer, Double> damageValuesFlying_bomb = new HashMap<>();
		flying_bomb.setDamageValues(damageValuesFlying_bomb);
		unitTypes.put(Flying_bomb, flying_bomb);

		UnitType attack_helicopter = new UnitType();
		attack_helicopter.setId(Attack_helicopter);
		attack_helicopter.setName("Attack_helicopter");
		attack_helicopter.setGraphicsName("/units/Attack_helicopter.svg");
		attack_helicopter.setMovementType(MovementType.FLYING);
		attack_helicopter.setMovement(6);
		attack_helicopter.setBanned(false);
		attack_helicopter.setValue(90);
		attack_helicopter.setMaxAmmo(6);
		attack_helicopter.setMaxFuel(99);
		attack_helicopter.setFuelPerTurn(5);
		attack_helicopter.setDestroyOnFuelOut(true);
		attack_helicopter.setCanStealth(false);
		attack_helicopter.setAttackAfterMove(true);
		attack_helicopter.setCounterAttackMelee(true);
		attack_helicopter.setCounterAttackRanged(false);
		attack_helicopter.setMinRange(1);
		attack_helicopter.setMaxRange(1);
		attack_helicopter.setCanCapture(false);
		Map<Integer, Double> damageValuesAttack_helicopter = new HashMap<>();
		damageValuesAttack_helicopter.put(Assault_rifle, 0.D);
		damageValuesAttack_helicopter.put(Bazooka, 0.D);
		damageValuesAttack_helicopter.put(Bike, 0.D);
		damageValuesAttack_helicopter.put(Car, 0.D);
		damageValuesAttack_helicopter.put(Supplier, 0.D);
		damageValuesAttack_helicopter.put(Small_cannon, 0.D);
		damageValuesAttack_helicopter.put(Big_cannon, 0.D);
		damageValuesAttack_helicopter.put(Air_cannon, 0.D);
		damageValuesAttack_helicopter.put(Mobile_flak, 0.D);
		damageValuesAttack_helicopter.put(Small_tank, 0.D);
		damageValuesAttack_helicopter.put(Big_tank, 0.D);
		damageValuesAttack_helicopter.put(Super_tank, 0.D);
		damageValuesAttack_helicopter.put(Giant_tank, 0.D);
		damageValuesAttack_helicopter.put(Fighter, 0.D);
		damageValuesAttack_helicopter.put(Stealth_fighter, 0.D);
		damageValuesAttack_helicopter.put(Bomber, 0.D);
		damageValuesAttack_helicopter.put(Flying_bomb, 0.D);
		damageValuesAttack_helicopter.put(Attack_helicopter, 0.D);
		damageValuesAttack_helicopter.put(Support_helicopter, 0.D);
		damageValuesAttack_helicopter.put(Transport_ship, 0.D);
		damageValuesAttack_helicopter.put(Repair_ship, 0.D);
		damageValuesAttack_helicopter.put(Submarine, 0.D);
		damageValuesAttack_helicopter.put(Combat_ship, 0.D);
		damageValuesAttack_helicopter.put(Cannon_ship, 0.D);
		damageValuesAttack_helicopter.put(Aircraft_carrier, 0.D);
		attack_helicopter.setDamageValues(damageValuesAttack_helicopter);
		unitTypes.put(Attack_helicopter, attack_helicopter);

		UnitType support_helicopter = new UnitType();
		support_helicopter.setId(Support_helicopter);
		support_helicopter.setName("Support_helicopter");
		support_helicopter.setGraphicsName("/units/Support_helicopter.svg");
		support_helicopter.setMovementType(MovementType.FLYING);
		support_helicopter.setMovement(6);
		support_helicopter.setBanned(false);
		support_helicopter.setValue(50);
		support_helicopter.setMaxAmmo(0);
		support_helicopter.setMaxFuel(99);
		support_helicopter.setFuelPerTurn(5);
		support_helicopter.setDestroyOnFuelOut(true);
		support_helicopter.setCanStealth(false);
		support_helicopter.setAttackAfterMove(false);
		support_helicopter.setCounterAttackMelee(false);
		support_helicopter.setCounterAttackRanged(false);
		support_helicopter.setMinRange(0);
		support_helicopter.setMaxRange(0);
		support_helicopter.setCanCapture(false);
		Map<Integer, Double> damageValuesSupport_helicopter = new HashMap<>();
		damageValuesSupport_helicopter.put(Assault_rifle, 0.D);
		damageValuesSupport_helicopter.put(Bazooka, 0.D);
		damageValuesSupport_helicopter.put(Bike, 0.D);
		damageValuesSupport_helicopter.put(Car, 0.D);
		damageValuesSupport_helicopter.put(Supplier, 0.D);
		damageValuesSupport_helicopter.put(Small_cannon, 0.D);
		damageValuesSupport_helicopter.put(Big_cannon, 0.D);
		damageValuesSupport_helicopter.put(Air_cannon, 0.D);
		damageValuesSupport_helicopter.put(Mobile_flak, 0.D);
		damageValuesSupport_helicopter.put(Small_tank, 0.D);
		damageValuesSupport_helicopter.put(Big_tank, 0.D);
		damageValuesSupport_helicopter.put(Super_tank, 0.D);
		damageValuesSupport_helicopter.put(Giant_tank, 0.D);
		damageValuesSupport_helicopter.put(Fighter, 0.D);
		damageValuesSupport_helicopter.put(Stealth_fighter, 0.D);
		damageValuesSupport_helicopter.put(Bomber, 0.D);
		damageValuesSupport_helicopter.put(Flying_bomb, 0.D);
		damageValuesSupport_helicopter.put(Attack_helicopter, 0.D);
		damageValuesSupport_helicopter.put(Support_helicopter, 0.D);
		damageValuesSupport_helicopter.put(Transport_ship, 0.D);
		damageValuesSupport_helicopter.put(Repair_ship, 0.D);
		damageValuesSupport_helicopter.put(Submarine, 0.D);
		damageValuesSupport_helicopter.put(Combat_ship, 0.D);
		damageValuesSupport_helicopter.put(Cannon_ship, 0.D);
		damageValuesSupport_helicopter.put(Aircraft_carrier, 0.D);
		support_helicopter.setDamageValues(damageValuesSupport_helicopter);
		unitTypes.put(Support_helicopter, support_helicopter);

		UnitType transport_ship = new UnitType();
		transport_ship.setId(Transport_ship);
		transport_ship.setName("Transport_ship");
		transport_ship.setGraphicsName("/units/Transport_ship.svg");
		transport_ship.setMovementType(MovementType.ALL_WATER);
		transport_ship.setMovement(6);
		transport_ship.setBanned(false);
		transport_ship.setValue(120);
		transport_ship.setMaxAmmo(0);
		transport_ship.setMaxFuel(99);
		transport_ship.setFuelPerTurn(5);
		transport_ship.setDestroyOnFuelOut(true);
		transport_ship.setCanStealth(false);
		transport_ship.setAttackAfterMove(false);
		transport_ship.setCounterAttackMelee(false);
		transport_ship.setCounterAttackRanged(false);
		transport_ship.setMinRange(0);
		transport_ship.setMaxRange(0);
		transport_ship.setCanCapture(false);
		Map<Integer, Double> damageValuesTransport_ship = new HashMap<>();
		damageValuesTransport_ship.put(Assault_rifle, 0.D);
		damageValuesTransport_ship.put(Bazooka, 0.D);
		damageValuesTransport_ship.put(Bike, 0.D);
		damageValuesTransport_ship.put(Car, 0.D);
		damageValuesTransport_ship.put(Supplier, 0.D);
		damageValuesTransport_ship.put(Small_cannon, 0.D);
		damageValuesTransport_ship.put(Big_cannon, 0.D);
		damageValuesTransport_ship.put(Air_cannon, 0.D);
		damageValuesTransport_ship.put(Mobile_flak, 0.D);
		damageValuesTransport_ship.put(Small_tank, 0.D);
		damageValuesTransport_ship.put(Big_tank, 0.D);
		damageValuesTransport_ship.put(Super_tank, 0.D);
		damageValuesTransport_ship.put(Giant_tank, 0.D);
		damageValuesTransport_ship.put(Fighter, 0.D);
		damageValuesTransport_ship.put(Stealth_fighter, 0.D);
		damageValuesTransport_ship.put(Bomber, 0.D);
		damageValuesTransport_ship.put(Flying_bomb, 0.D);
		damageValuesTransport_ship.put(Attack_helicopter, 0.D);
		damageValuesTransport_ship.put(Support_helicopter, 0.D);
		damageValuesTransport_ship.put(Transport_ship, 0.D);
		damageValuesTransport_ship.put(Repair_ship, 0.D);
		damageValuesTransport_ship.put(Submarine, 0.D);
		damageValuesTransport_ship.put(Combat_ship, 0.D);
		damageValuesTransport_ship.put(Cannon_ship, 0.D);
		damageValuesTransport_ship.put(Aircraft_carrier, 0.D);
		transport_ship.setDamageValues(damageValuesTransport_ship);
		unitTypes.put(Transport_ship, transport_ship);

		UnitType repair_ship = new UnitType();
		repair_ship.setId(Repair_ship);
		repair_ship.setName("Repair_ship");
		repair_ship.setGraphicsName("/units/Repair_ship.svg");
		repair_ship.setMovementType(MovementType.ALL_WATER);
		repair_ship.setMovement(7);
		repair_ship.setBanned(false);
		repair_ship.setValue(70);
		repair_ship.setMaxAmmo(0);
		repair_ship.setMaxFuel(99);
		repair_ship.setFuelPerTurn(5);
		repair_ship.setDestroyOnFuelOut(true);
		repair_ship.setCanStealth(false);
		repair_ship.setAttackAfterMove(false);
		repair_ship.setCounterAttackMelee(false);
		repair_ship.setCounterAttackRanged(false);
		repair_ship.setMinRange(0);
		repair_ship.setMaxRange(0);
		repair_ship.setCanCapture(false);
		Map<Integer, Double> damageValuesRepair_ship = new HashMap<>();
		damageValuesRepair_ship.put(Assault_rifle, 0.D);
		damageValuesRepair_ship.put(Bazooka, 0.D);
		damageValuesRepair_ship.put(Bike, 0.D);
		damageValuesRepair_ship.put(Car, 0.D);
		damageValuesRepair_ship.put(Supplier, 0.D);
		damageValuesRepair_ship.put(Small_cannon, 0.D);
		damageValuesRepair_ship.put(Big_cannon, 0.D);
		damageValuesRepair_ship.put(Air_cannon, 0.D);
		damageValuesRepair_ship.put(Mobile_flak, 0.D);
		damageValuesRepair_ship.put(Small_tank, 0.D);
		damageValuesRepair_ship.put(Big_tank, 0.D);
		damageValuesRepair_ship.put(Super_tank, 0.D);
		damageValuesRepair_ship.put(Giant_tank, 0.D);
		damageValuesRepair_ship.put(Fighter, 0.D);
		damageValuesRepair_ship.put(Stealth_fighter, 0.D);
		damageValuesRepair_ship.put(Bomber, 0.D);
		damageValuesRepair_ship.put(Flying_bomb, 0.D);
		damageValuesRepair_ship.put(Attack_helicopter, 0.D);
		damageValuesRepair_ship.put(Support_helicopter, 0.D);
		damageValuesRepair_ship.put(Transport_ship, 0.D);
		damageValuesRepair_ship.put(Repair_ship, 0.D);
		damageValuesRepair_ship.put(Submarine, 0.D);
		damageValuesRepair_ship.put(Combat_ship, 0.D);
		damageValuesRepair_ship.put(Cannon_ship, 0.D);
		damageValuesRepair_ship.put(Aircraft_carrier, 0.D);
		repair_ship.setDamageValues(damageValuesRepair_ship);
		unitTypes.put(Repair_ship, repair_ship);

		UnitType submarine = new UnitType();
		submarine.setId(Submarine);
		submarine.setName("Submarine");
		submarine.setGraphicsName("/units/Submarine.svg");
		submarine.setMovementType(MovementType.DEEP_WATER);
		submarine.setMovement(6);
		submarine.setBanned(false);
		submarine.setValue(180);
		submarine.setMaxAmmo(6);
		submarine.setMaxFuel(99);
		submarine.setFuelPerTurn(5);
		submarine.setDestroyOnFuelOut(false);
		submarine.setCanStealth(true);
		submarine.setAttackAfterMove(true);
		submarine.setCounterAttackMelee(true);
		submarine.setCounterAttackRanged(false);
		submarine.setMinRange(1);
		submarine.setMaxRange(1);
		submarine.setCanCapture(false);
		Map<Integer, Double> damageValuesSubmarine = new HashMap<>();
		damageValuesSubmarine.put(Assault_rifle, 0.D);
		damageValuesSubmarine.put(Bazooka, 0.D);
		damageValuesSubmarine.put(Bike, 0.D);
		damageValuesSubmarine.put(Car, 0.D);
		damageValuesSubmarine.put(Supplier, 0.D);
		damageValuesSubmarine.put(Small_cannon, 0.D);
		damageValuesSubmarine.put(Big_cannon, 0.D);
		damageValuesSubmarine.put(Air_cannon, 0.D);
		damageValuesSubmarine.put(Mobile_flak, 0.D);
		damageValuesSubmarine.put(Small_tank, 0.D);
		damageValuesSubmarine.put(Big_tank, 0.D);
		damageValuesSubmarine.put(Super_tank, 0.D);
		damageValuesSubmarine.put(Giant_tank, 0.D);
		damageValuesSubmarine.put(Fighter, 0.D);
		damageValuesSubmarine.put(Stealth_fighter, 0.D);
		damageValuesSubmarine.put(Bomber, 0.D);
		damageValuesSubmarine.put(Flying_bomb, 0.D);
		damageValuesSubmarine.put(Attack_helicopter, 0.D);
		damageValuesSubmarine.put(Support_helicopter, 0.D);
		damageValuesSubmarine.put(Transport_ship, 0.D);
		damageValuesSubmarine.put(Repair_ship, 0.D);
		damageValuesSubmarine.put(Submarine, 0.D);
		damageValuesSubmarine.put(Combat_ship, 0.D);
		damageValuesSubmarine.put(Cannon_ship, 0.D);
		damageValuesSubmarine.put(Aircraft_carrier, 0.D);
		submarine.setDamageValues(damageValuesSubmarine);
		unitTypes.put(Submarine, submarine);

		UnitType combat_ship = new UnitType();
		combat_ship.setId(Combat_ship);
		combat_ship.setName("Combat_ship");
		combat_ship.setGraphicsName("/units/Combat_ship.svg");
		combat_ship.setMovementType(MovementType.DEEP_WATER);
		combat_ship.setMovement(7);
		combat_ship.setBanned(false);
		combat_ship.setValue(140);
		combat_ship.setMaxAmmo(0);
		combat_ship.setMaxFuel(99);
		combat_ship.setFuelPerTurn(5);
		combat_ship.setDestroyOnFuelOut(true);
		combat_ship.setCanStealth(false);
		combat_ship.setAttackAfterMove(true);
		combat_ship.setCounterAttackMelee(true);
		combat_ship.setCounterAttackRanged(false);
		combat_ship.setMinRange(1);
		combat_ship.setMaxRange(1);
		combat_ship.setCanCapture(false);
		Map<Integer, Double> damageValuesCombat_ship = new HashMap<>();
		damageValuesCombat_ship.put(Assault_rifle, 0.D);
		damageValuesCombat_ship.put(Bazooka, 0.D);
		damageValuesCombat_ship.put(Bike, 0.D);
		damageValuesCombat_ship.put(Car, 0.D);
		damageValuesCombat_ship.put(Supplier, 0.D);
		damageValuesCombat_ship.put(Small_cannon, 0.D);
		damageValuesCombat_ship.put(Big_cannon, 0.D);
		damageValuesCombat_ship.put(Air_cannon, 0.D);
		damageValuesCombat_ship.put(Mobile_flak, 0.D);
		damageValuesCombat_ship.put(Small_tank, 0.D);
		damageValuesCombat_ship.put(Big_tank, 0.D);
		damageValuesCombat_ship.put(Super_tank, 0.D);
		damageValuesCombat_ship.put(Giant_tank, 0.D);
		damageValuesCombat_ship.put(Fighter, 0.D);
		damageValuesCombat_ship.put(Stealth_fighter, 0.D);
		damageValuesCombat_ship.put(Bomber, 0.D);
		damageValuesCombat_ship.put(Flying_bomb, 0.D);
		damageValuesCombat_ship.put(Attack_helicopter, 0.D);
		damageValuesCombat_ship.put(Support_helicopter, 0.D);
		damageValuesCombat_ship.put(Transport_ship, 0.D);
		damageValuesCombat_ship.put(Repair_ship, 0.D);
		damageValuesCombat_ship.put(Submarine, 0.D);
		damageValuesCombat_ship.put(Combat_ship, 0.D);
		damageValuesCombat_ship.put(Cannon_ship, 0.D);
		damageValuesCombat_ship.put(Aircraft_carrier, 0.D);
		combat_ship.setDamageValues(damageValuesCombat_ship);
		unitTypes.put(Combat_ship, combat_ship);

		UnitType cannon_ship = new UnitType();
		cannon_ship.setId(Cannon_ship);
		cannon_ship.setName("Cannon_ship");
		cannon_ship.setGraphicsName("/units/Cannon_ship.svg");
		cannon_ship.setMovementType(MovementType.DEEP_WATER);
		cannon_ship.setMovement(6);
		cannon_ship.setBanned(false);
		cannon_ship.setValue(250);
		cannon_ship.setMaxAmmo(6);
		cannon_ship.setMaxFuel(99);
		cannon_ship.setFuelPerTurn(5);
		cannon_ship.setDestroyOnFuelOut(true);
		cannon_ship.setCanStealth(false);
		cannon_ship.setAttackAfterMove(true);
		cannon_ship.setCounterAttackMelee(false);
		cannon_ship.setCounterAttackRanged(false);
		cannon_ship.setMinRange(3);
		cannon_ship.setMaxRange(5);
		cannon_ship.setCanCapture(false);
		Map<Integer, Double> damageValuesCannon_ship = new HashMap<>();
		damageValuesCannon_ship.put(Assault_rifle, 0.D);
		damageValuesCannon_ship.put(Bazooka, 0.D);
		damageValuesCannon_ship.put(Bike, 0.D);
		damageValuesCannon_ship.put(Car, 0.D);
		damageValuesCannon_ship.put(Supplier, 0.D);
		damageValuesCannon_ship.put(Small_cannon, 0.D);
		damageValuesCannon_ship.put(Big_cannon, 0.D);
		damageValuesCannon_ship.put(Air_cannon, 0.D);
		damageValuesCannon_ship.put(Mobile_flak, 0.D);
		damageValuesCannon_ship.put(Small_tank, 0.D);
		damageValuesCannon_ship.put(Big_tank, 0.D);
		damageValuesCannon_ship.put(Super_tank, 0.D);
		damageValuesCannon_ship.put(Giant_tank, 0.D);
		damageValuesCannon_ship.put(Fighter, 0.D);
		damageValuesCannon_ship.put(Stealth_fighter, 0.D);
		damageValuesCannon_ship.put(Bomber, 0.D);
		damageValuesCannon_ship.put(Flying_bomb, 0.D);
		damageValuesCannon_ship.put(Attack_helicopter, 0.D);
		damageValuesCannon_ship.put(Support_helicopter, 0.D);
		damageValuesCannon_ship.put(Transport_ship, 0.D);
		damageValuesCannon_ship.put(Repair_ship, 0.D);
		damageValuesCannon_ship.put(Submarine, 0.D);
		damageValuesCannon_ship.put(Combat_ship, 0.D);
		damageValuesCannon_ship.put(Cannon_ship, 0.D);
		damageValuesCannon_ship.put(Aircraft_carrier, 0.D);
		cannon_ship.setDamageValues(damageValuesCannon_ship);
		unitTypes.put(Cannon_ship, cannon_ship);

		UnitType aircraft_carrier = new UnitType();
		aircraft_carrier.setId(Aircraft_carrier);
		aircraft_carrier.setName("Aircraft_carrier");
		aircraft_carrier.setGraphicsName("/units/Aircraft_carrier.svg");
		aircraft_carrier.setMovementType(MovementType.DEEP_WATER);
		aircraft_carrier.setMovement(1);
		aircraft_carrier.setBanned(false);
		aircraft_carrier.setValue(280);
		aircraft_carrier.setMaxAmmo(6);
		aircraft_carrier.setMaxFuel(99);
		aircraft_carrier.setFuelPerTurn(5);
		aircraft_carrier.setDestroyOnFuelOut(false);
		aircraft_carrier.setCanStealth(false);
		aircraft_carrier.setAttackAfterMove(true);
		aircraft_carrier.setCounterAttackMelee(true);
		aircraft_carrier.setCounterAttackRanged(false);
		aircraft_carrier.setMinRange(3);
		aircraft_carrier.setMaxRange(7);
		aircraft_carrier.setCanCapture(false);
		Map<Integer, Double> damageValuesAircraft_carrier = new HashMap<>();
		damageValuesAircraft_carrier.put(Assault_rifle, 0.D);
		damageValuesAircraft_carrier.put(Bazooka, 0.D);
		damageValuesAircraft_carrier.put(Bike, 0.D);
		damageValuesAircraft_carrier.put(Car, 0.D);
		damageValuesAircraft_carrier.put(Supplier, 0.D);
		damageValuesAircraft_carrier.put(Small_cannon, 0.D);
		damageValuesAircraft_carrier.put(Big_cannon, 0.D);
		damageValuesAircraft_carrier.put(Air_cannon, 0.D);
		damageValuesAircraft_carrier.put(Mobile_flak, 0.D);
		damageValuesAircraft_carrier.put(Small_tank, 0.D);
		damageValuesAircraft_carrier.put(Big_tank, 0.D);
		damageValuesAircraft_carrier.put(Super_tank, 0.D);
		damageValuesAircraft_carrier.put(Giant_tank, 0.D);
		damageValuesAircraft_carrier.put(Fighter, 0.D);
		damageValuesAircraft_carrier.put(Stealth_fighter, 0.D);
		damageValuesAircraft_carrier.put(Bomber, 0.D);
		damageValuesAircraft_carrier.put(Flying_bomb, 0.D);
		damageValuesAircraft_carrier.put(Attack_helicopter, 0.D);
		damageValuesAircraft_carrier.put(Support_helicopter, 0.D);
		damageValuesAircraft_carrier.put(Transport_ship, 0.D);
		damageValuesAircraft_carrier.put(Repair_ship, 0.D);
		damageValuesAircraft_carrier.put(Submarine, 0.D);
		damageValuesAircraft_carrier.put(Combat_ship, 0.D);
		damageValuesAircraft_carrier.put(Cannon_ship, 0.D);
		damageValuesAircraft_carrier.put(Aircraft_carrier, 0.D);
		aircraft_carrier.setDamageValues(damageValuesAircraft_carrier);
		unitTypes.put(Aircraft_carrier, aircraft_carrier);

		UnitType barrier_cannon = new UnitType();
		barrier_cannon.setId(Barrier_cannon);
		barrier_cannon.setName("Barrier_cannon");
		barrier_cannon.setGraphicsName("/units/Barrier_cannon.svg");
		barrier_cannon.setMovementType(MovementType.BARRIER);
		barrier_cannon.setMovement(11);
		barrier_cannon.setBanned(false);
		barrier_cannon.setValue(200);
		barrier_cannon.setMaxAmmo(9);
		barrier_cannon.setMaxFuel(99);
		barrier_cannon.setFuelPerTurn(0);
		barrier_cannon.setDestroyOnFuelOut(false);
		barrier_cannon.setCanStealth(false);
		barrier_cannon.setAttackAfterMove(false);
		barrier_cannon.setCounterAttackMelee(false);
		barrier_cannon.setCounterAttackRanged(false);
		barrier_cannon.setMinRange(2);
		barrier_cannon.setMaxRange(5);
		barrier_cannon.setCanCapture(false);
		Map<Integer, Double> damageValuesBarrier_cannon = new HashMap<>();
		damageValuesBarrier_cannon.put(Assault_rifle, 0.D);
		damageValuesBarrier_cannon.put(Bazooka, 0.D);
		damageValuesBarrier_cannon.put(Bike, 0.D);
		damageValuesBarrier_cannon.put(Car, 0.D);
		damageValuesBarrier_cannon.put(Supplier, 0.D);
		damageValuesBarrier_cannon.put(Small_cannon, 0.D);
		damageValuesBarrier_cannon.put(Big_cannon, 0.D);
		damageValuesBarrier_cannon.put(Air_cannon, 0.D);
		damageValuesBarrier_cannon.put(Mobile_flak, 0.D);
		damageValuesBarrier_cannon.put(Small_tank, 0.D);
		damageValuesBarrier_cannon.put(Big_tank, 0.D);
		damageValuesBarrier_cannon.put(Super_tank, 0.D);
		damageValuesBarrier_cannon.put(Giant_tank, 0.D);
		damageValuesBarrier_cannon.put(Fighter, 0.D);
		damageValuesBarrier_cannon.put(Stealth_fighter, 0.D);
		damageValuesBarrier_cannon.put(Bomber, 0.D);
		damageValuesBarrier_cannon.put(Flying_bomb, 0.D);
		damageValuesBarrier_cannon.put(Attack_helicopter, 0.D);
		damageValuesBarrier_cannon.put(Support_helicopter, 0.D);
		damageValuesBarrier_cannon.put(Transport_ship, 0.D);
		damageValuesBarrier_cannon.put(Repair_ship, 0.D);
		damageValuesBarrier_cannon.put(Submarine, 0.D);
		damageValuesBarrier_cannon.put(Combat_ship, 0.D);
		damageValuesBarrier_cannon.put(Cannon_ship, 0.D);
		damageValuesBarrier_cannon.put(Aircraft_carrier, 0.D);
		barrier_cannon.setDamageValues(damageValuesBarrier_cannon);
		unitTypes.put(Aircraft_carrier, barrier_cannon);


		return unitTypes;
	}
}
